<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8" />
	<link REL="SHORTCUT ICON" HREF="img/favicon.ico">
	<title>&nbsp; Lesson Map Editor</title>
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<script src="https://apis.google.com/js/api.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
	<link   rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
 	<style>
		 body { 			font-family: Verdana,Geneva,sans-serif; font-size:14px; padding:0; margin:0; 
		 					box-sizing: border-box; background-color: #f8f8f8;	
							}
		.lz-main { 			width:100%; overflow:auto;
							}
		.lz-header { 		background-color: #bbb; width:100%; padding: 8px 0; color:#fff;
							}
		.lz-popSelect {		position: absolute; top:16px; left:16px; background-color: #eee; border: 1px solid #aaa;
							padding:16px 0;
							}
		.lz-map { 			width:calc(100% - 32px);  overflow:auto; padding:16px; background-color:#fff; height:calc(100vh - 150px);
						}
		.lz-popSelInner { 	width:100%; height:calc(100% - 16px); overflow-y:auto; 
							}
		.lz-bs {			cursor: pointer; color:#fff; 
							text-align: center; border-radius: 16px; display: inline-block; user-select: none;
							font-size: 12px; background-color: #27ae60; padding: 2px 8px 2px 8px; vertical-align:3px;
							}
		.lz-confirm {		position: absolute;  width: 300px; padding: 16px; left: calc(50% - 150px); top: calc(50% - 50px); user-select: none;	
							border-radius: 8px; background-color: #fff; border: 1px solid #999; box-shadow: 4px 2px 12px 2px #aaa; 
							}
		.lz-over {			border-radius:16px; padding: 8px; width:calc(100% - 24px); height: 24px;
							border:1px solid #999; font-size: 13px ;margin-left:16px;height:64px; width:calc(50% - 72px);
							}
		.lz-is {			border-radius:16px; padding:0 8px; width:calc(100% - 24px); height: 24px;
							border:1px solid #999; font-size: 13px;
							}

		 table 		{		border-spacing: 0px;  }
	
	</style>

</head>
<body>

	<div id='mainDiv' class='lz-main'>
		<div id='headerDiv' class='lz-header'>
			<img src='img/lizalogo64.png' style='margin:0 12px 0 20px;height:18px;vertical-align:-4px'><b>Session Editor</b>
			<div style='margin-right:16px;color:#000;float:right'>
				<span id='loadBut' style='margin-right:24px;cursor:pointer'>Load</span>
				<span id='saveBut' style='margin-right:24px;cursor:pointer'>Save</span>
				<span id='previewBut' style='margin-right:24px;cursor:pointer'>Preview</span>
				<span id='otherBut' style='cursor:pointer'>Other</span>
			</div>
			<hr>
			<span style='position:absolute;left:18px'><b>Instructor says</b></span>
			<span style='position:absolute;left:calc(45% - 20px)'><b>Goal</b></span>
			<span style='position:absolute;left:calc(50% - 20px)'><b>Student responds</b></span>
			<span style='position:absolute;left:calc(75% - 40px)'><b>Consequence</b></span><br>
		</div>
		<div id='mapDiv' class='lz-map'></div>
			<div id='addStep' class='lz-bs' style='margin-left:16px;margin-top:16px'>Add new line</div>
			<div id='removeStep' class='lz-bs' style='margin-right:16px;margin-top:18px;float:right'>Remove line</div>
	</div>
		
<script>

	if ((location.protocol != 'https:') && (window.location.host != "localhost")) location.href = 'https:' + window.location.href.substring(window.location.protocol.length); // FORCE HTTPS!
	$(document).ready(function() {								           								// ON PAGE LOADED
		app=new App();																						// Alloc app
		app.Draw();
		if (window.location.host != "localhost") {															// Not in debug
			$("#splashDiv").fadeIn();																		// Fade in splash page
			$("#mainDiv").fadeIn(2000);																		// Fade in main
			}
		else	$("#mainDiv").fadeIn(0);																	// Load fast
		});

	function PopSelect(o)																				// POPUP SELECT
	{
		var i,col,s;
		var trsty=";clear:both;min-height:22px;cursor:pointer;padding-bottom:6px'>";
		$("#popSelectDiv").remove();																		// Remove if open
		var str="<div id='popSelectDiv' class='lz-popSelect' style='";										// Header
		str+="left:"+o.x+"px;top:"+o.y+"px;width:"+o.w+"px;height:"+o.h+"px'>";								// Position and size
		str+="<span style='margin:16px;pa'><b>"+o.title+"</b><span>";										// Title
		str+="<img src='img/closedot.gif' style='float:right;margin-right:10px;' onclick='$(\"#popSelectDiv\").remove()'><hr style='margin-top:10px'>";	// Title and closer
		str+="<div id='popSelInDiv' class='lz-popSelInner'>";												// Scrollable div
		for (i=0;i<o.opts.length;++i) {																		// For each option	
			s=o.opts[i];																					// Get text
			if (s.charAt(0) == '-')			s=s.substr(1),col="#880000";									// Wrong
			else if (s.charAt(0) == '+')	s=s.substr(1),col="#006600";									// Right
			else							col="#000000";													// Other
			str+="<div id='psopt-"+i+"' style='margin-left:8px;color:"+col+trsty+s;							// Add div
			str+="<img id='psdel-"+i+"'src='img/trashbut.gif' style='float:right;display:none'>";			// Add delete button 
			str+="<img id='psedt-"+i+"'src='img/editbut.gif' style='float:right;display:none'></div>";		// Add edit button 
			}
		str+="<p style='margin-left:8px'><input type='text' placeholder='Type to add new item' class='lz-is' id='psadd'></p>";		// Add add button
		str+="</div></div>";																				// End divs
		$("body").append(str);																				// Add to body

		$("[id^=psdel-]").on("click",(e)=> {  																// Delete button
			e.stopPropagation();																			// Don't propagate event			
			var id=e.target.id.substr(6);						 											// Get id
			ConfirmBox("Are you sure?", "This will permanently delete this item:<br><i>"+o.ds[id]+"</i>", ()=> {	// If sure
				app.Do();																					// Undo setup
				o.ds.splice(id,1); 																			// Remove it from array
				o.opts.splice(id,1); 																		// Remove it from selector
				PopSelect(o);																				// Recurse
				Sound("ding");																				// Ding
				});
			});

		$("[id^=psedt-]").on("click",(e)=> {  																// Edit button
			e.stopPropagation();																			// Don't propagate event			
			var id=e.target.id.substr(6);						 											// Get id
			var s=$("#psopt-"+id).text();																	// Get value
			if (s) s=s.replace(/'/g,"&apos;");																// No 's
			$("#psopt-"+id).html("<input type='text' class='lz-is' style='height:20px;' value='"+s+"' id='psedit'>");	// Add editor
			$("#psedit").on("click", (e)=>{ e.stopPropagation(); });										// Don't propagate event							
			$("#psedit").on("change", ()=>{																	// On enter key hit
				app.Do();																					// Undo setup
				s=$("#psedit").val();																		// Get value
				o.ds[id]=s;																					// Add item
				o.opts[id]=s; 																				// Change local copy
				PopSelect(o)																				// Recurse
				});
			});

		$("[id^=psopt-]").on("click",(e)=> {  																// On line click
			var id=e.target.id.substr(6);						 											// Get id
			app.Do();																						// Undo setup
			if (o.ds == app.as)			app.arcs[o.id].a=id; 												// If instructor action, set slot
			else if (o.ds == app.rs)	app.arcs[o.id].r=id; 												// Student response											
			else						app.arcs[o.id].c=id;												// Consequence
			app.Draw();																						// Redraw		
			$("#popSelectDiv").remove();																	// Kill dialog
			});

		$("[id^=psopt-]").on("mouseover",(e)=> {  															// On over line
			var id=e.target.id.substr(6);						 											// Get id
			$("#psopt-"+id).css("background-color","#dee7f1");												// Color bar
			if (id > 0) {																					// Not first one
				$("#psedt-"+id).css("display","inline-block");												// Show edit icon
				$("#psdel-"+id).css("display","inline-block");												// Show delete icon
				}
			});

		$("[id^=psopt-]").on("mouseout",(e)=> {  															// Off line
			var id=e.target.id.substr(6);						 											// Get id
			$("#psopt-"+id).css("background-color","#eee");													// Restore bar
			$("#psedt-"+id).css("display","none");															// Hide edit icon
			$("#psdel-"+id).css("display","none");															// Hide delete icon
			});

		$("#psadd").on("change",(e)=> {  																	// On add click
			app.Do();																						// Undo setup
			var s=$("#psadd").val();																		// Get new item
			o.opts.push(s);																					// Add new value
			if (o.ds == app.as)		o.ds.push({ text:s })													// Add action
			else					o.ds.push(s);															// Add response or consequence
			PopSelect(o)																					// Recurse
		});

	}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// APP
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var app=null;

class App  {																

	constructor(id)   																					// CONSTRUCTOR
	{
		app=this;
		this.undos=[];																						// Holds undos
		this.curUndo=0;																						// Undo counter
		this.arcs=[]; this.as=[];  this.cs=[];	this.rs=[];													// Data
		this.gid="1ez3sEcWaNk9QgoRRGn5BOQYj541wBcrx8Es2ClJMmbU";											// Default  spreadsheet
		var url=window.location.search.substring(1);						   								// Get query string
		if (url) {																							// If params
			if (url.match(/gid=/i)) this.gid=url.split("&")[0].substr(4);									// If params have a 'gid=' tag, use it
			else					this.gid=url;															// Default spreadsheet
			}
		this.Load(this.gid);																				// Load it

		$("#addStep").on("click",(e)=> {  																	// ON ADD STEP
			var i;
			this.Do();																						// Undo setup
			for (i=0;i<this.arcs.length;++i)																// For each step
				if ($("#strad-"+i).prop("checked"))															// If it's checked
					break;																					// Stop looking
			var a=i ? this.arcs[i-1].a : -1;																// Use instructor action from step above
			this.arcs.splice(i,0,{ a:a, r:-1, c:-1, n:-1, f:-1 });											// Add blank step
			this.Draw();																					// Redraw
			Sound("ding");																					// Ding
			});

		$("#removeStep").on("click",(e)=> {  																// ON REMOVE STEP
			var i;
			for (i=0;i<this.arcs.length;++i)																// For each step
				if ($("#strad-"+i).prop("checked"))															// If it's checked
					break;																					// Stop looking
			if (i < this.arcs.length)																		// If something checked
				ConfirmBox("Are you sure?", "This will permanently delete step "+(i+1), ()=> {				// If sure
					this.Do();																				// Undo setup
					this.arcs.splice(i,1); 																	// Remove it
					this.Draw();																			// Redraw
					Sound("ding");																			// Ding
					});
			else	Sound("delete");																		// Delete
			});

		$("#loadBut").on("click",(e)=> {  																	// ON LOAD
			GetSpreadsheet(false, (s)=>{ 																	// Get spreadsheet id
				this.Do();																					// Undo setup
				this.gid=s;																					// Set
				this.Load(s);																				// Load up sheet 
				});	
			});

		$("#previewBut").on("click",(e)=> {  																// ON PREVIEW
			window.open("index.html?"+this.gid,"LizaPreview");												// Open tab
			});

	}

	InitDefaults()																						// SET DEFAULT OPTIONS
	{
		this.arcs=[];  this.as=[];   this.cs=[];   this.rs=[];												// Reset data
		this.as.push("");
		this.as.push("A:Do you agree");
		this.as.push("P:Are you sure?");
		this.as.push("P:Tell me more?");
		this.as.push("P:Elaborate");
		this.as.push("W:Tell me why");
		this.as.push("Q:Know the answer");
		this.rs.push("");
		this.rs.push("-I'm not sure");
		this.rs.push("-I have have no idea");
		this.rs.push("-Less than half agree");
		this.rs.push("+More than half agree");
		this.cs.push("");
		this.cs.push("Good");
		this.cs.push("OK, but...");
		this.cs.push("Anyone else know?");
	}

	Draw()																								// DRAW
	{
		var i,o,a,r,c,g;
		var rcol;
		var w=$("#mapDiv").width();
		var h=$("#mapDiv").height();
		var str="<table style='width:100%'>";
		for (i=0;i<this.arcs.length;++i) {
			o=this.arcs[i]
			a=(o.a < 0) ? "<i>Choose</i>" : this.as[o.a];													// Set text for instructor option
			r=(o.r < 0) ? "" : this.rs[o.r];																// Response
			c=(o.c < 0) ? "" : this.cs[o.c];																// Consequence
			g=o.g;																							// Goal
			if (i && (o.a == this.arcs[i-1].a)) 	a=this.as[0];											// Ditto
			if (i && (o.g == this.arcs[i-1].g)) 	g="";													// Don't repeat last
			if (r.charAt(0) == '-')					r=r.substr(1),rcol="#880000";							// Wrong
			else if (r.charAt(0) == '+')			r=r.substr(1),rcol="#006600";							// Right
			else									rcol="#000000";											// Other
			str+="<tr id='stpl-"+i+"'><td style='padding:8px 0;width:45%' id='stpa-"+i+"'>"+(i+1)+". "+a+"</td><td style='width:5%'";		// Instructor action
			str+=(o.a > 0) ? " id='stpg-"+i+"'>"+g : ">";													// Add goal if a new step
			str+="</td><td id='stpr-"+i+"' style='width:25%;color:"+rcol+"'>"+r+"</td><td style='width:25%' id='stpc-"+i+"'>"+c;		// Response / consequence
			str+="</td><td><input id='strad-"+i+"' name='stradgrp' type='radio'></td></tr>";				// Add radio button
			}
		str+="</table>";
		$("#mapDiv").html(str);																				// Add to div	

		$("tr:odd").css({  "background-color":"#f0f0f0"});													// Striping
		$("[id^=stpl-]").on("mouseover",function() {  $(this).css("background-color","#d7ebff")	});			// On mouse over line
		$("[id^=stpl-]").on("mouseout",(e)=> {  															// On mouse out of line
			var id=(e.currentTarget.id.substr(5));						 									// Get index
			$("#stpl-"+id).css("background-color",id%2 ? "#f0f0f0" : "#ffffff");							// Restore striping
			});
		
		$("[id^=stpa-]").on("click",(e)=> {  																// On A click
			var id=(e.currentTarget.id.substr(5));						 									// Get index
			var o={ x:0, y:66, h:h, w:w*.45-16, opts:[], title:"Choose action", ds:this.as, id:id };		// Settings
			for (i=0;i<this.as.length;++i)	o.opts.push(this.as[i]);										// Add options
			PopSelect(o)																					// Pick new item
			});

		$("[id^=stpg-]").on("click",(e)=> {  																// On C click
			var id=(e.currentTarget.id.substr(5));						 									// Get index
			GetTextBox("Type new goal","This is a way to identify topics within your session", this.arcs[id].g, // Ask for new goal
				(s)=> {	this.Do();	this.arcs[id].g=s;  this.Draw(); }, e.pageX, e.pageY);					// Set new goal
			});

		$("[id^=stpr-]").on("click",(e)=> {  																// On R click
			var id=(e.currentTarget.id.substr(5));						 									// Get index
			var o={ x:w*.5-16, y:66, h:h, w:w/4-16, opts:[], title:"Choose response", ds:this.rs, id:id };	// Settings
			for (i=0;i<this.rs.length;++i)	o.opts.push(this.rs[i]);										// Add options
			PopSelect(o);																					// Pick new item
			});
		
		$("[id^=stpc-]").on("click",(e)=> {  																// On C click
			var id=(e.currentTarget.id.substr(5));						 									// Get index
			var o={ x:w*.75-32, y:66, h:h, w:w/4-16, opts:[], title:"Choose consequence", ds:this.cs, id:id };	// Settings
			for (i=0;i<this.cs.length;++i)	o.opts.push(this.cs[i]);										// Add options
			PopSelect(o);																					// Pick new item
			});
	}

	Load(id) 																							// LOAD DOC FROM GOOGLE DRIVE
	{
		var _this=this;																						// Save context
		var str="https://docs.google.com/spreadsheets/d/"+id+"/export?format=tsv";							// Acces
		var xhr=new XMLHttpRequest();																		// Ajax
		xhr.open("GET",str);																				// Set open url
		xhr.send();																							// Do it

		xhr.onload=function() { 																			// When loaded
			var i,v,line,goal,str;
			_this.InitDefaults();																			// Set default items
			var tsv=xhr.responseText.replace(/\r/g,"");														// Remove CRs
			tsv=tsv.split("\n");																			// Split into lines
			for (i=1;i<tsv.length;++i) {																	// For each line
				v=tsv[i].split("\t");																		// Split into fields
				if (v[1].match(/ov/i))  																	// Overview
					$("#overDiv").html(v[3].trim());														// Add													
				else if (v[1].match(/^Q|W|A|I|S|C|P/)) {													// New step
					line=({ a:-1, r:-1, c:-1, g: -1 });														// Blank line
					if (v[0] && isNaN(v[0])) goal=v[0].trim();												// If a goal set
					str=v[1].charAt(0)+":"+v[3].trim();														// Add text
					if (v[4] && !isNaN(v[4]))	str+=" {S"+v[4].trim()+"}";									// Add slide if set
					_this.as.push(str);																		// Add to actions					
					_this.arcs.push({ a:_this.as.length-1, r:-1, c:-1, g:goal });							// Add line
					}
				else if (v[1].match(/^R/i)) { 																// Response
					_this.rs.push(v[1].substr(1)+v[3].trim());												// Add response
					_this.cs.push(v[5].trim());																// Add Consequence
					_this.arcs.push({ a:_this.as.length-1, r:_this.rs.length-1, c:_this.cs.length-1, g:goal });	// Add line
					}
			}
		_this.Draw();																						// Draw
		};									

		xhr.onreadystatechange=function(e) { 															// ON AJAX STATE CHANGE
			if ((xhr.readyState === 4) && (xhr.status !== 200)) {  										// Ready, but no load
				Sound("delete");																		// Delete sound
				PopUp("<p style='color:#990000'><b>Couldn't load Google Doc!</b></p>Make sure that <i>anyone</i><br>can view it in Google",5000); // Popup warning
				}
			};		
		
		}

	Do()																		// DO
	{
//		this.undos[this.curUndo]=app.doc.MakeTabFile();								// Save undo
		this.curUndo++;																// Inc undo count
	}
	
	UnDo()																		// UNDO
	{
		if (this.curUndo < 1)														// Nothing to undo
			return;																	// Quit
//		app.doc.InitFromTSV(this.undos[this.curUndo-1]);							// Init show from undo
		app.Draw();																	// Redraw
		this.curUndo--;																// Dec undo count
		Sound("ding");																// Ding
	}

} // APP CLASS CLOSURE
																					

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GOOGLE DRIVE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var gdClientId="453812393680-8tb3isinl1bap0vqamv45cc5d9c7ohai.apps.googleusercontent.com";		// Google client id
var gdScope="https://www.googleapis.com/auth/drive";											// Scope of access
var gdKey="AIzaSyD0jrIlONfTgL-qkfnMTNdjizsNbLBBjTk";											// Google API key

function SaveSpreadsheet(id, data)															// CLEAR AND SAVE DATA TO GDRIVE
{
		gapi.load('client:auth2', function() {
			gapi.client.init({																	// Init
			apiKey: gdKey, clientId: gdClientId, scope:gdScope,									// Params
           	discoveryDocs:["https://sheets.googleapis.com/$discovery/rest?version=v4"],			// API discovery
        	}).then(function () {																// When initted, listen for sign-in state changes.
	        	gapi.auth2.getAuthInstance().isSignedIn.listen(doIt);							// Try						
        		doIt(gapi.auth2.getAuthInstance().isSignedIn.get());							// Try
	
				function doIt(isSignedIn) {														// Do action
					if (!isSignedIn) 															// If not signed in yet														
						gapi.auth2.getAuthInstance().signIn();									// Sign in
					else{																		// Clear and save
						var params= { spreadsheetId:id, range: "A1:ZZZ100000" };				// Where to save it
						var body= { majorDimension: "ROWS", values: data };						// Data to save
						var request=gapi.client.sheets.spreadsheets.values.clear(params);		// Clear first
						request.then(function(r) { 												// When cleared
							params.valueInputOption="RAW";										// Send raw data
							var request=gapi.client.sheets.spreadsheets.values.update(params,body);	// Send new data
							request.then(function(r) {											// Good save
								Sound("ding");													// Ding
								PopUp("Course copied<br>to Google Drive!");						// Show popup
								}, 
								function(e) { trace(e.result.error.message); })					// Error reporting for send
							}, 
						function(e) { trace(e.result.error.message); });						// Error reporting for clear
						}
				}			
			});
		});
}

function GetSpreadsheet(allFiles, callback)													// RUN GDRIVE PICKER
{
	var oauthToken,pickerApiLoaded=false;
	gapi.load('auth', { callback: function() {													// LOAD AUTH
		window.gapi.auth.authorize({															// Authorize
				apiKey: gdKey, client_id: gdClientId, scope:gdScope,immediate: false },			// Params
				function(authResult) {															// On auth return
					if (authResult && !authResult.error) {										// If OK
						oauthToken=authResult.access_token;										// Set token
						createPicker();															// Create picker
						}
				});																				// End auth.authorize()
			}																					// End callback()
		});																						// End auth()
		
	gapi.load('picker', {'callback': function() {												// LOAD PICKER							
			pickerApiLoaded=true;																// Set flag
			createPicker();																		// Create picker
			}
		});
	
	function createPicker() {																	// CREATE GDRIVE PICKER
		if (pickerApiLoaded && oauthToken) {													// If loaded and authed
			var view=new google.picker.DocsView(google.picker.ViewId.SPREADSHEETS).				// Make view
			setOwnedByMe(allFiles).setIncludeFolders(true);										// Params
			var picker=new google.picker.PickerBuilder().										// Make picker
				addView(view).setOAuthToken(oauthToken).										// Params
				setDeveloperKey(gdKey).setCallback(pickerCallback).build();						// Do it
			picker.setVisible(true);															// Show picker
			}
		}

	function pickerCallback(data) {																// FILE CHOSEN CALLBACK
		if (data[google.picker.Response.ACTION] == google.picker.Action.PICKED) {				// If picked
			var doc=data[google.picker.Response.DOCUMENTS][0];									// Get doc
			callback(doc.id,doc.name);															// Return name and id
			}
		}
}																								// End closure

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// HELPERS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	function ShortenString(str, len)													// SHORTEN A STRING TO LENGTH
	{
		if (str && str.length > len)														// Too long
			str=str.substr(0,(len-3)/2)+"..."+str.slice((len-3)/-2);						// Shorten	
		return str;																			// Return string
	}

	function GetTextBox(title, content, def, callback, x, y)							// GET TEXT LINE BOX
	{
		$("#confirmBoxDiv").remove();														// Remove 
		$("body").append("<div class='lz-confirm' id='confirmBoxDiv'></div>");				// Add box														
		if (x != undefined)		$("#confirmBoxDiv").css({ left:x+"px", top:y+"px" });		// Position if set
		var str="<img src='img/lizalogo.png' width='64' style='vertical-align:-8px'/>&nbsp;&nbsp;";								
		str+="<span style='font-size:14px; color:#666'><b>"+title+"</b></span><br><br>";
		str+="<p>"+content+"<p>";
		str+="<p><input class='lz-is' style='width:75%' type='text' id='gtBoxTt' value='"+def+"'></p>";
		str+="<div id='dialogOK' class='lz-bs'>OK</div>";
		str+="<div id='dialogCancel' class='lz-bs' style='margin-left:8px;background-color:#999'>Cancel</div></div>";
		$("#confirmBoxDiv").html(str);																	// Add to div
		$("#gtBoxTt").focus();																			// Focus on button
		$("#gtBoxTt").on("change", function() {	callback($("#gtBoxTt").val()); $("#confirmBoxDiv").remove(); });	// ONE ENTER
		$("#dialogOK").on("click", function() {	callback($("#gtBoxTt").val()); $("#confirmBoxDiv").remove(); });	// ON OK 
		$("#dialogCancel").on("click", function() {	$("#confirmBoxDiv").remove(); });								// ON CANCEL
		}

	function ConfirmBox(title, content, callback, callback2)							// CONFIRMATION BOX
	{
		Sound("ding");																		// Ding sound
		$("#confirmBoxDiv").remove();														// Remove 
		$("body").append("<div class='lz-confirm' id='confirmBoxDiv'></div>");														
		var str="<img src='img/lizalogo.png' width='64' style='vertical-align:-8px'/>&nbsp;&nbsp;";								
		str+="<span style='font-size:14px; color:#666'><b>"+title+"</b></span><br>";
		str+="<p>"+content+"<p>";
		str+="<div style='float:right'><div id='confirmOK' class='lz-bs'>OK</div>";
		str+="<div id='confirmCancel' class='lz-bs' style='margin-left:8px;background-color:#999'>Cancel</div></div>";
		$("#confirmBoxDiv").html(str);	
	
		$("#confirmOK").on("click", function() {											// ON OK BUT
				$("#confirmBoxDiv").remove();												// Remove 
				if (callback)	callback();													// If callback defined, run it
				});

		$("#confirmCancel").on("click", function() {										// ON CANCEL BUT
				$("#confirmBoxDiv").remove();												// Remove 
				if (callback2)	callback2();												// If callback defined, run it
				Sound("delete");															// Delete sound
				});
	}

	function MakeSelect(id, multi, items, sel, extra, values)				// CREATE HTML SELECT
	{
		var	str="<select class='wm-is' style='width:200px' id='"+id+"'";		// Header
		if (multi)																// Multi select
			str+="multiple='multiple' size='"+multi+"'";						// Add flag
		if (extra)																// If extra param
			str+=extra;															// Add them
		str+=">";																// End header
		for (i=0;i<items.length;++i) {											// For each option
			str+="<option";														// Add tag
			if (values && values[i]) {											// If has a value
				str+=" value='"+values[i]+"'";									// Add it
				if (sel == values[i])	str+=" selected='selected'"				// If value selected, add tag
				}
			else if (sel == items[i])	str+=" selected='selected'"				// If name selected, add tag
			str+=">"+items[i]+"</option>";										// End option
			}	
		return str+"</select>";													// End select				
	}

	function trace(msg, p1, p2, p3, p4)										// CONSOLE 
	{
		if (p4 != undefined)
			console.log(msg,p1,p2,p3,p4);
		else if (p3 != undefined)
			console.log(msg,p1,p2,p3);
		else if (p2 != undefined)
			console.log(msg,p1,p2);
		else if (p1 != undefined)
			console.log(msg,p1);
		else
			console.log(msg);
	}

	function Sound(sound, mute)												// PLAY SOUND
	{
		var snd=new Audio();													// Init audio object
		if (sound.match(/\.mp3/i))		snd=new Audio(sound)					// If an MP3 file
		else							snd=new Audio("img/"+sound+".mp3");		// Use built in mp3
		if (!mute)	{															// If not initing or muting	
			snd.volume=50/100;													// Set volume
			snd.play();															// Play it
			}
		}

	function PopUp(msg, time, div)											// TIMED POPUP
	{
		var str="";
		$("#popupDiv").remove();												// Kill old one, if any
		str+="<div id='popupDiv' class='wm-popup'>"; 							// Add div
		if (time == -1) {														// If has close but
			time=100000;														// Increase time
			str+="<img id='pu-close' src='img/closedot.gif' style='float:right;cursor:pointer'>";	// Add close button
			}
		str+=msg+"</div>"; 														// Add div
		$(div ? "#"+div : "body").append(str);									// Add popup to div or body
		$("#pu-close").click(function() { $("#popupDiv").remove(); });			// Remove on click of close but
		$("#popupDiv").fadeIn(500).delay(time ? time : 2000).fadeOut(500)		// Animate in and out		
	}

</script>
</body>
</html>
